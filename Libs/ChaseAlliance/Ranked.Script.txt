//#RequireContext CSmMode

#Include "ChaseAlliance/Libs/Common/Log.Script.txt"

#Include "TextLib" as TL
#Include "ColorLib" as CL
#Include "MathLib" as ML

// #Const C_EventSource "ChaseTeams"
#Const C_JoinRankedGame "Ranked_JoinRankedGame"

#Struct K_ChaseTeamsPlayers {
	Text[] PlayersLogin;
	Text[] PlayersName;
}

declare K_ChaseTeamsPlayers[] G_ChaseTeamsPlayers;

K_ChaseTeamsPlayers GetTeam(Integer _Clan){
	return G_ChaseTeamsPlayers[_Clan-1];
}

K_ChaseTeamsPlayers GetOpposingTeam(Integer _Clan){
	declare Integer[] LUT = [1,0];
	return G_ChaseTeamsPlayers[LUT[_Clan-1]];
}

Void FillChaseTeamsPlayers(){
    foreach(Player in Players){
        if(Player != Null && Player.CurrentClan == 1){
            G_ChaseTeamsPlayers[0].PlayersLogin.add(Player.User.Login);
            G_ChaseTeamsPlayers[0].PlayersName.add(Player.User.Name);
        }
        else  if (Player != Null && Player.CurrentClan == 2){
            G_ChaseTeamsPlayers[1].PlayersLogin.add(Player.User.Login);
            G_ChaseTeamsPlayers[1].PlayersName.add(Player.User.Name);
        }
    }
    Log("Team 1 : "^ G_ChaseTeamsPlayers[0].PlayersName);
}

Void _AddPlayerToRankedGame(CSmPlayer _Player){
    if(_Player != Null ){
        G_ChaseTeamsPlayers[_Player.CurrentClan-1].PlayersLogin.add(_Player.User.Login);
        G_ChaseTeamsPlayers[_Player.CurrentClan-1].PlayersName.add(_Player.User.Name);
    }
    Log("Team 1 : "^ G_ChaseTeamsPlayers[0].PlayersName);
    Log("Team 2 : "^ G_ChaseTeamsPlayers[1].PlayersName);
}

Boolean TeamsAreConsistant(){
    foreach(Player in Players){
        if(Player != Null && Player.CurrentClan == 1){
            // G_ChaseTeamsPlayers[0].PlayersId.exists(Player.User.Login);
            if (!G_ChaseTeamsPlayers[0].PlayersLogin.exists(Player.User.Login)){
                return False;
            }
        }
        else  if (Player != Null && Player.CurrentClan == 2){
            if (!G_ChaseTeamsPlayers[1].PlayersLogin.exists(Player.User.Login)){
                return False;
            }
        }
    }
    return True;
}

Void PassUIEvent(CUIConfigEvent _Event){
	if(_Event.Type != CUIConfigEvent::EType::OnLayerCustomEvent) return;
	if(_Event.UI == Null) return;
	
	if(_Event.CustomEventType == C_JoinRankedGame){
		declare Player = GetPlayer(_Event.UI);
		_AddPlayerToRankedGame(Player);
	}
}

declare Boolean G_Loaded;
Void Unload() {
	G_Loaded = False;
    G_ChaseTeamsPlayers.add(K_ChaseTeamsPlayers{});
	G_ChaseTeamsPlayers.add(K_ChaseTeamsPlayers{});
}

Void Load() {
	if(G_Loaded)return;
	Unload();
	G_Loaded = True;
	// Messages::Load();
	// Events::Load();
	// GameState::Load();
	// Commands::Load();
}




