//#RequireContext CSmMlScriptIngame
#Include "ChaseAlliance/Libs/Common/Layers.Script.txt" as Layers
#Include "ChaseAlliance/Libs/Common/UI/Manialink.Script.txt" as Manialink
#Include "ChaseAlliance/Libs/ChaseAlliance/UI/Components/ScoresTable.Script.txt" as ScoresTable
#Include "ChaseAlliance/Libs/ChaseAlliance/UI/Components/ChaseTeams.Script.txt" as ChaseTeams

#Const C "ScoresTableUI"

Text _Model(){
	return """
<framemodel id="{{{C}}}" class="{{{C}}}">
	<frameinstance modelid="{{{ScoresTable::C}}}" id="scores" pos="0 8"/>
</framemodel>
""";
}

Text _Labels(){
	return """//!
***Init***
***
	declare K_{{{ScoresTable::C}}} ScoresTable = {{{ScoresTable::C}}}_Get(Page.MainFrame,"scores");
	declare Boolean PageWasVisible;
***

***Yield***
***
if(IsInGameMenuDisplayed){
	ScoresTable.Root.Hide();
}else{
	ScoresTable.Root.Show();
}
***

***{{{ChaseTeams::C}}}_Change***
***
{{{ScoresTable::C}}}_Update(ScoresTable);
***

***End***
***
if(!PageIsVisible && PageWasVisible){
	PageWasVisible = False;
}
if(PageIsVisible && !PageWasVisible){
	PageWasVisible = True;
	{{{ScoresTable::C}}}_Update(ScoresTable);
}
***
""";
}

declare Boolean G_Loaded;
Void Unload() {
	G_Loaded = False;
	Layers::Destroy(C);
}

Void Load() {
	if(G_Loaded)return;
	Unload();
	G_Loaded = True;
	Manialink::Load();
	ScoresTable::Load();
	Manialink::CreateComponent(C,
		[ChaseTeams::C,ScoresTable::C],
		_Model(),"","",_Labels());
	Layers::Load();
	Layers::Create(C,Manialink::CreateManialink(C));
	Layers::SetType(C,CUILayer::EUILayerType::ScoresTable);
	Layers::AttachAll(C);
}