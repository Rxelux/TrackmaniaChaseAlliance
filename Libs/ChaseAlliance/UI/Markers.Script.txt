//#RequireContext CSmMode
#Include "ChaseAlliance/Libs/Common/Log.Script.txt"
#Include "ChaseAlliance/Libs/Common/Layers.Script.txt" as Layers

#Const C_LayerName "ChaseMarkers"

Text ML(){
	declare Text Instances;
	for(I,0,100){
		Instances ^= """<frameinstance modelid="player-marker" id="player-{{{I}}}"/>""";
	}

	return
"""<manialink version="3" name="{{{C_LayerName}}}">

	<framemodel id="player-marker">
		<label id="player-name" halign="center" />
	</framemodel>
	{{{Instances}}}		
	<script><!--
	#Include "TextLib" as TL
	main(){
		declare CMlFrame[] PlayerMarkers;
		for(I,0,100){
			PlayerMarkers.add(Page.GetFirstChild("player-"^I) as CMlFrame);
		}
		declare Integer PrevMarkerCount;
		while (True) {
			yield;
			if(PrevMarkerCount != UI.Markers.count){
				PrevMarkerCount = UI.Markers.count;
				foreach (I => Marker in UI.Markers) {
					if(Marker.Type == CUIConfigMarker::EAnchorType::Player){
						declare CMlLabel PlayerName <=> (PlayerMarkers[I].GetFirstChild("player-name") as CMlLabel);
						PlayerName.Value = Marker.ImageUrl;
					}
				}
			}
		}
	}
	--></script>
</manialink>""";
}

Void AttachMarkers() {
	declare Text[] MarkerLogins;
	foreach (Marker in UIManager.UIAll.Markers) {
		if(Marker.Type == CUIConfigMarker::EAnchorType::Player){
			UIManager.UIAll.RemoveMarker(Marker);
		}
	}
	foreach (I => Player in Players) {
		declare Marker = UIManager.UIAll.AddMarker(Player);
		Marker.HudVisibility = CUIConfigMarker::EHudVisibility::Always;
		Marker.Box = <0.,0.,0.>;
		Marker.ImageUrl = Player.User.Login; //NOTE - shameless hijacking of the ImageUrl Text value to pass the attached player login to the client
		Marker.ManialinkFrameId = "player-"^I;
	}
}

declare Boolean G_Loaded;
Void Unload() {
	G_Loaded = False;
	Layers::Destroy(C_LayerName);
}

Void Load() {
	if(G_Loaded)return;
	Unload();
	G_Loaded = True;
	Layers::Load();
	Layers::Create(C_LayerName,ML());
	Layers::SetType(C_LayerName,CUILayer::EUILayerType::Markers);
	Layers::AttachAll(C_LayerName);
}