#Include "ChaseAlliance/Libs/Common/UI/Manialink.Script.txt" as Manialink
#Include "ChaseAlliance/Libs/Common/UI/Consts/Align.Script.txt" as Align
#Include "ChaseAlliance/Libs/ChaseAlliance/Consts/Colors.Script.txt" as Colors
#Include "ChaseAlliance/Libs/Common/UI/Components/Common.Script.txt" as Common

#Include "TextLib" as TL

#Const C "RelayerMarkers"

Text _Model (){
	return """
<framemodel id="{{{C}}}" class="{{{C}}}">
	<frame id="visibility" hidden="1"><!-- this is needed because the c++ will force the framemodel to be always visible  -->
		<quad id="background" pos="0 0" size="5 5" bgcolor="000000FF" {{{Align::CC}}}/>
	</frame>
</framemodel>
""";
}

Text _Directives(){
	return """//!
#Struct K_{{{C}}}{
	CMlFrame Root;
	CMlQuad Background;
	CMlFrame Visibility;
}
""";
}

Text _Functions(){
	return """//!

K_{{{C}}} {{{C}}}_Get(CMlFrame _Parent,Text _Id) {
	declare CMlFrame Root <=> (_Parent.GetFirstChild(_Id) as CMlFrame);
	declare CMlQuad Background <=> (Root.GetFirstChild("background") as CMlQuad);
	declare CMlFrame Visibility <=> (Root.GetFirstChild("visibility") as CMlFrame);

	return K_{{{C}}}{
		Root = Root,
		Visibility = Visibility,
		Background = Background
	};
}

Void {{{C}}}_UpdateVisibility(K_{{{C}}} _RelayerMarker,CUIConfigMarker _Marker,CSmPlayer _Relayer){

	if(_Marker.Type != CUIConfigMarker::EAnchorType::Player) return;
	declare CSmPlayer Player <=> GetPlayer(_Marker.ImageUrl);
	if(Player == Null || _Relayer == Null || Player != _Relayer){
		_RelayerMarker.Visibility.Hide();
		return;
	}
	if(Player.CurrentClan == 1 || Player.CurrentClan == 2){
		if(GUIPlayer == Null || GUIPlayer.CurrentClan == Player.CurrentClan){
			_RelayerMarker.Visibility.Show();
			return;
		}
	}
	_RelayerMarker.Visibility.Hide();
}
""";
}

declare Boolean G_Loaded;
Void Unload() {
	G_Loaded = False;
}

Void Load() {
	if(G_Loaded)return;
	Unload();
	G_Loaded = True;
	Manialink::Load();
	Common::Load();
	Manialink::CreateComponent(C,["GetPlayer"],_Model(),_Directives(),_Functions(),"");
}
