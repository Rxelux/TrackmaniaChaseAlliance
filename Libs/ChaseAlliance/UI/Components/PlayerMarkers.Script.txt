#Include "ChaseAlliance/Libs/Common/UI/Manialink.Script.txt" as Manialink
#Include "ChaseAlliance/Libs/Common/UI/Consts/Align.Script.txt" as Align
#Include "ChaseAlliance/Libs/ChaseAlliance/Consts/Colors.Script.txt" as Colors
#Include "ChaseAlliance/Libs/Common/UI/Components/Common.Script.txt" as Common

#Include "TextLib" as TL

#Const C "PlayerMarkers"

Text _Model (){
	return """
<framemodel id="{{{C}}}" class="{{{C}}}">
	<frame id="visibility" hidden="1"><!-- this is needed because the c++ will force the framemodel to be always visible  -->
	<quad id="background" size="30 4" opacity="0.5" {{{Align::CC}}}/>
	<label id="player-name" size="26 4" textsize="1" textfont="RajdhaniMono" textemboss="1" {{{Align::C2}}}/>
	</frame>
</framemodel>
""";
}

Text _Directives(){
	return """//!
#Struct K_{{{C}}}{
	CMlFrame Root;
	CMlFrame Visibility;
	CMlLabel PlayerName;
	CMlQuad Background;
}
""";
}

Text _Functions(){
	return """//!

K_{{{C}}} {{{C}}}_Get(CMlFrame _Parent,Text _Id) {
	declare CMlFrame Root <=> (_Parent.GetFirstChild(_Id) as CMlFrame);
	declare CMlLabel PlayerName <=> (Root.GetFirstChild("player-name") as CMlLabel);
	declare CMlFrame Visibility <=> (Root.GetFirstChild("visibility") as CMlFrame);
	declare CMlQuad Background <=> (Root.GetFirstChild("background") as CMlQuad);
	return K_{{{C}}}{
		Root = Root,
		Visibility = Visibility,
		PlayerName = PlayerName,
		Background =Background
	};
}

Void {{{C}}}_UpdateVisibility(K_{{{C}}} _PlayerMarker,CUIConfigMarker _Marker){

	declare CSmPlayer Player <=> GetPlayer(_Marker.ImageUrl);
	if(Player == Null){
		_PlayerMarker.Visibility.Hide();
		return;
	}
	if(Player.CurrentClan == 1 || Player.CurrentClan == 2){
		if(GUIPlayer == Null){
			_PlayerMarker.Visibility.Show();
			declare Real L = TL::Length(Player.User.Name)*1.8;
			_PlayerMarker.PlayerName.Value = Player.User.Name;
			_PlayerMarker.PlayerName.Size.X = L;
			_PlayerMarker.Background.BgColor = Teams[Player.CurrentClan-1].ColorUI;
			_PlayerMarker.Background.Size.X = L;
		}else{
			if(GUIPlayer.CurrentClan == Player.CurrentClan){
				_PlayerMarker.Visibility.Show();
				declare Real L = TL::Length(Player.User.Name)*1.8;
				_PlayerMarker.PlayerName.Value = Player.User.Name;
				_PlayerMarker.PlayerName.Size.X = L;
				_PlayerMarker.Background.BgColor = Teams[Player.CurrentClan-1].ColorUI;
				_PlayerMarker.Background.Size.X = L;
			}else{
				_PlayerMarker.Visibility.Hide();
			}
		}
	}else{
		_PlayerMarker.Visibility.Hide();
	}
}
""";
}

declare Boolean G_Loaded;
Void Unload() {
	G_Loaded = False;
}

Void Load() {
	if(G_Loaded)return;
	Unload();
	G_Loaded = True;
	Manialink::Load();
	Common::Load();
	Manialink::CreateComponent(C,["GetPlayer"],_Model(),_Directives(),_Functions(),"");
}
