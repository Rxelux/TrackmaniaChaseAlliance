#Include "ChaseAlliance/Libs/Common/UI/Manialink.Script.txt" as Manialink
#Include "ChaseAlliance/Libs/Common/UI/Consts/Align.Script.txt" as Align
#Include "ChaseAlliance/Libs/ChaseAlliance/Consts/Colors.Script.txt" as Colors
#Include "ChaseAlliance/Libs/ChaseAlliance/UI/Components/Button.Script.txt" as Button
#Include "TextLib" as TL

#Const C "Ranked"

Text _Model (){
	return """
<framemodel id="{{{C}}}" class="{{{C}}}" {{{Align::CC}}}>
	<frameinstance modelid="{{{Button::C}}}" id="join-leave-ranked" data-pos="0 7" data-size="45 12" data-grow="0 0" data-text="{{{_("Join Ranked")}}}" data-text-size="3"/>
	<frameinstance hidden="1" modelid="{{{Button::C}}}" id="ready-ranked" data-pos="2.5 -7" data-size="40 12" data-grow="0 0" data-text="{{{_("Ready")}}}" data-text-size="3"/>
	<frameinstance  modelid="{{{Button::C}}}" id="all-ranked" data-pos="0 -20" data-size="40 12" data-grow="0 0" data-text="{{{_("Ranked All")}}}" data-text-size="3"/>
</framemodel>
""";
}

Text _Directives(){
	return """//!
#Struct K_{{{C}}}{
	CMlFrame Root;
	K_{{{Button::C}}} JoinOrLeaveRanked;
	K_{{{Button::C}}} ReadyRanked;
	K_{{{Button::C}}} PutAllRanked;
}
""";
}

Text _Functions(){
	return """//!

K_{{{C}}} {{{C}}}_Get(CMlFrame _Parent,Text _Id) {
	declare CMlFrame Root <=> (_Parent.GetFirstChild(_Id) as CMlFrame);
	declare K_{{{Button::C}}} JoinOrLeaveRanked = {{{Button::C}}}_Get(Root,"join-leave-ranked");
	declare K_{{{Button::C}}} ReadyRanked = {{{Button::C}}}_Get(Root,"ready-ranked");
	declare K_{{{Button::C}}} PutAllRanked = {{{Button::C}}}_Get(Root,"all-ranked");
	return K_{{{C}}}{
		Root = Root,
		JoinOrLeaveRanked = JoinOrLeaveRanked,
		ReadyRanked = ReadyRanked,
		PutAllRanked = PutAllRanked
	};
}

Void {{{C}}}_Enter(K_{{{C}}} _Ranked,Integer _StartTime){
	{{{Button::C}}}_Enter(_Ranked.JoinOrLeaveRanked,_StartTime);
	{{{Button::C}}}_Enter(_Ranked.ReadyRanked,_StartTime+20);
	{{{Button::C}}}_Enter(_Ranked.PutAllRanked,_StartTime+40);
}

Void {{{C}}}_Exit(K_{{{C}}} _Ranked,Integer _StartTime){
	{{{Button::C}}}_Exit(_Ranked.JoinOrLeaveRanked,_StartTime);
	{{{Button::C}}}_Exit(_Ranked.ReadyRanked,_StartTime+20);
	{{{Button::C}}}_Exit(_Ranked.PutAllRanked,_StartTime+40);
}
""";
}

Text _Labels(){
	return """//!
***{{{Button::C}}}_Event***
***
if(Event.Type == CMlScriptEvent::Type::MouseClick){
	//check if the button event is from one of this component
	if(Button.Root.Parent.HasClass("{{{C}}}")){
		switch(Button.Root.ControlId){
			case "join-leave-ranked": {
				if (!IsRankedPlayer) IsRankedPlayer = True;
				else IsRankedPlayer = False;
				+++{{{C}}}_JoinOrLeaveRankedClick+++
			}
			case "ready-ranked": {
				if (!IsReadyRanked) IsReadyRanked = True;
				else IsReadyRanked = False;
				+++{{{C}}}_ReadyRankedClick+++
			}
			case "all-ranked": {
				+++{{{C}}}_AddBotsRankedClick+++
			}
		}
	}
}
***
""";
}

declare Boolean G_Loaded;
Void Unload() {
	G_Loaded = False;
}

Void Load() {
	if(G_Loaded)return;
	Unload();
	G_Loaded = True;
	Manialink::Load();
	Button::Load();
	Manialink::CreateComponent(C,[Button::C],_Model(),_Directives(),_Functions(),_Labels());
}
